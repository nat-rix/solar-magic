use crate::addr::Addr;

pub mod am {
    use crate::tvl::TU24;

    use super::*;
    /// Absolute
    #[derive(Debug, Clone, Copy)]
    pub struct A(pub u16);
    /// Absolute Indexed, X
    #[derive(Debug, Clone, Copy)]
    pub struct Ax(pub u16);
    /// Absolute Indexed, Y
    #[derive(Debug, Clone, Copy)]
    pub struct Ay(pub u16);
    /// Absolute Long
    #[derive(Debug, Clone, Copy)]
    pub struct Al(pub Addr);
    /// Absolute Long Indexed, X
    #[derive(Debug, Clone, Copy)]
    pub struct Alx(pub Addr);
    /// Direct Page
    #[derive(Debug, Clone, Copy)]
    pub struct D(pub u8);
    /// Direct Indexed, X
    #[derive(Debug, Clone, Copy)]
    pub struct Dx(pub u8);
    /// Direct Indexed, Y
    #[derive(Debug, Clone, Copy)]
    pub struct Dy(pub u8);
    /// Direct Page Indexed Indirect, X
    #[derive(Debug, Clone, Copy)]
    pub struct Dxi(pub u8);
    /// Direct Page Indirect Indexed, Y
    #[derive(Debug, Clone, Copy)]
    pub struct Diy(pub u8);
    /// Direct Page Indirect Long Indexed, Y
    #[derive(Debug, Clone, Copy)]
    pub struct Dily(pub u8);
    /// Direct Page Indirect
    #[derive(Debug, Clone, Copy)]
    pub struct Di(pub u8);
    /// Direct Page Indirect Long
    #[derive(Debug, Clone, Copy)]
    pub struct Dil(pub u8);
    /// Stack Relative
    #[derive(Debug, Clone, Copy)]
    pub struct S(pub u8);
    /// Stack Relative Indirect Indexed, Y
    #[derive(Debug, Clone, Copy)]
    pub struct Siy(pub u8);
    /// Immediate
    #[derive(Debug, Clone, Copy)]
    pub enum I {
        U8(u8),
        U16(u16),
    }

    #[derive(Debug, Clone, Copy)]
    pub struct AddrModeRes {
        pub is24: bool,
        pub addr: TU24,
    }
    impl AddrModeRes {
        pub fn incr(&mut self) {
            if self.is24 {
                self.addr = self.addr.adc(1, false).0;
            } else {
                self.addr = self.addr.add16(1);
            }
        }
    }
    impl From<AddrModeRes> for TU24 {
        fn from(value: AddrModeRes) -> Self {
            value.addr
        }
    }
}
use am::*;

#[derive(Debug, Clone, Copy)]
pub struct NearLabel(pub u8);

impl NearLabel {
    pub fn take(&self, pc: Addr) -> Addr {
        pc.add16((self.0 as i8 as i16 as u16).wrapping_add(2))
    }
}

fn f16(f: &mut impl FnMut() -> Option<u8>) -> Option<u16> {
    Some(u16::from_le_bytes([f()?, f()?]))
}

fn f24(f: &mut impl FnMut() -> Option<u8>) -> Option<Addr> {
    Some(Addr::from_bytes([f()?, f()?, f()?]))
}

impl I {
    pub fn from_fetcher(f: &mut impl FnMut() -> Option<u8>, x: bool) -> Option<Self> {
        if x {
            f().map(Self::U8)
        } else {
            f16(f).map(Self::U16)
        }
    }
}

#[derive(Debug, Clone)]
pub enum Instruction {
    Brk(u8),
    OraDxi(Dxi),
    Cop(u8),
    OraS(S),
    TsbD(D),
    OraD(D),
    AslD(D),
    OraDil(Dil),
    Php,
    OraI(I),
    AslAc,
    Phd,
    TsbA(A),
    OraA(A),
    AslA(A),
    OraAl(Al),
    Bpl(NearLabel),
    OraDiy(Diy),
    OraDi(Di),
    OraSiy(Siy),
    TrbD(D),
    OraDx(Dx),
    AslDx(Dx),
    OraDily(Dily),
    Clc,
    OraAy(Ay),
    IncAc,
    Tcs,
    TrbA(A),
    OraAx(Ax),
    AslAx(Ax),
    OraAlx(Alx),
    Jsr(u16),
    AndDxi(Dxi),
    Jsl(Addr),
    AndS(S),
    BitD(D),
    AndD(D),
    RolD(D),
    AndDil(Dil),
    Plp,
    AndI(I),
    RolAc,
    Pld,
    BitA(A),
    AndA(A),
    RolA(A),
    AndAl(Al),
    Bmi(NearLabel),
    AndDiy(Diy),
    AndDi(Di),
    AndSiy(Siy),
    BitDx(Dx),
    AndDx(Dx),
    RolDx(Dx),
    AndDily(Dily),
    Sec,
    AndAy(Ay),
    DecAc,
    Tsc,
    BitAx(Ax),
    AndAx(Ax),
    RolAx(Ax),
    AndAlx(Alx),
    Rti,
    EorDxi(Dxi),
    Wdm(u8),
    EorS(S),
    /// src bank, dst bank
    Mvp(u8, u8),
    EorD(D),
    LsrD(D),
    EorDil(Dil),
    Pha,
    EorI(I),
    LsrAc,
    Phk,
    Jmp(u16),
    EorA(A),
    LsrA(A),
    EorAl(Al),
    Bvc(NearLabel),
    EorDiy(Diy),
    EorDi(Di),
    EorSiy(Siy),
    /// src bank, dst bank
    Mvn(u8, u8),
    EorDx(Dx),
    LsrDx(Dx),
    EorDily(Dily),
    Cli,
    EorAy(Ay),
    Phy,
    Tcd,
    Jml(Addr),
    EorAx(Ax),
    LsrAx(Ax),
    EorAlx(Alx),
    Rts,
    AdcDxi(Dxi),
    Per(u16),
    AdcS(S),
    StzD(D),
    AdcD(D),
    RorD(D),
    AdcDil(Dil),
    Pla,
    AdcI(I),
    RorAc,
    Rtl,
    Jmpi(u16),
    AdcA(A),
    RorA(A),
    AdcAl(Al),
    Bvs(NearLabel),
    AdcDiy(Diy),
    AdcDi(Di),
    AdcSiy(Siy),
    StzDx(Dx),
    AdcDx(Dx),
    RorDx(Dx),
    AdcDily(Dily),
    Sei,
    AdcAy(Ay),
    Ply,
    Tdc,
    Jmpxi(u16),
    AdcAx(Ax),
    RorAx(Ax),
    AdcAlx(Alx),
    Bra(NearLabel),
    StaDxi(Dxi),
    Brl(NearLabel),
    StaS(S),
    StyD(D),
    StaD(D),
    StxD(D),
    StaDil(Dil),
    Dey,
    BitI(I),
    Txa,
    Phb,
    StyA(A),
    StaA(A),
    StxA(A),
    StaAl(Al),
    Bcc(NearLabel),
    StaDiy(Diy),
    StaDi(Di),
    StaSiy(Siy),
    StyDx(Dx),
    StaDx(Dx),
    StxDy(Dy),
    StaDily(Dily),
    Tya,
    StaAy(Ay),
    Txs,
    Txy,
    StzA(A),
    StaAx(Ax),
    StzAx(Ax),
    StaAlx(Alx),
    LdyI(I),
    LdaDxi(Dxi),
    LdxI(I),
    LdaS(S),
    LdyD(D),
    LdaD(D),
    LdxD(D),
    LdaDil(Dil),
    Tay,
    LdaI(I),
    Tax,
    Plb,
    LdyA(A),
    LdaA(A),
    LdxA(A),
    LdaAl(Al),
    Bcs(NearLabel),
    LdaDiy(Diy),
    LdaDi(Di),
    LdaSiy(Siy),
    LdyDx(Dx),
    LdaDx(Dx),
    LdxDy(Dy),
    LdaDily(Dily),
    Clv,
    LdaAy(Ay),
    Tsx,
    Tyx,
    LdyAx(Ax),
    LdaAx(Ax),
    LdxAy(Ay),
    LdaAlx(Alx),
    CpyI(I),
    CmpDxi(Dxi),
    Rep(u8),
    CmpS(S),
    CpyD(D),
    CmpD(D),
    DecD(D),
    CmpDil(Dil),
    Iny,
    CmpI(I),
    Dex,
    Wai,
    CpyA(A),
    CmpA(A),
    DecA(A),
    CmpAl(Al),
    Bne(NearLabel),
    CmpDiy(Diy),
    CmpDi(Di),
    CmpSiy(Siy),
    Pei(u8),
    CmpDx(Dx),
    DecDx(Dx),
    CmpDily(Dily),
    Cld,
    CmpAy(Ay),
    Phx,
    Stp,
    Jmli(u16),
    CmpAx(Ax),
    DecAx(Ax),
    CmpAlx(Alx),
    CpxI(I),
    SbcDxi(Dxi),
    Sep(u8),
    SbcS(S),
    CpxD(D),
    SbcD(D),
    IncD(D),
    SbcDil(Dil),
    Inx,
    SbcI(I),
    Nop,
    Xba,
    CpxA(A),
    SbcA(A),
    IncA(A),
    SbcAl(Al),
    Beq(NearLabel),
    SbcDiy(Diy),
    SbcDi(Di),
    SbcSiy(Siy),
    Pea(u16),
    SbcDx(Dx),
    IncDx(Dx),
    SbcDily(Dily),
    Sed,
    SbcAy(Ay),
    Plx,
    Xce,
    Jsrxi(u16),
    SbcAx(Ax),
    IncAx(Ax),
    SbcAlx(Alx),
}

impl Instruction {
    pub fn from_fetcher(
        mut f: impl FnMut() -> Option<u8>,
        m: Option<bool>,
        x: Option<bool>,
    ) -> Option<Self> {
        Some(match f()? {
            0x00 => Self::Brk(f()?),
            0x01 => Self::OraDxi(Dxi(f()?)),
            0x02 => Self::Cop(f()?),
            0x03 => Self::OraS(S(f()?)),
            0x04 => Self::TsbD(D(f()?)),
            0x05 => Self::OraD(D(f()?)),
            0x06 => Self::AslD(D(f()?)),
            0x07 => Self::OraDil(Dil(f()?)),
            0x08 => Self::Php,
            0x09 => Self::OraI(I::from_fetcher(&mut f, m?)?),
            0x0A => Self::AslAc,
            0x0B => Self::Phd,
            0x0C => Self::TsbA(A(f16(&mut f)?)),
            0x0D => Self::OraA(A(f16(&mut f)?)),
            0x0E => Self::AslA(A(f16(&mut f)?)),
            0x0F => Self::OraAl(Al(f24(&mut f)?)),
            0x10 => Self::Bpl(NearLabel(f()?)),
            0x11 => Self::OraDiy(Diy(f()?)),
            0x12 => Self::OraDi(Di(f()?)),
            0x13 => Self::OraSiy(Siy(f()?)),
            0x14 => Self::TrbD(D(f()?)),
            0x15 => Self::OraDx(Dx(f()?)),
            0x16 => Self::AslDx(Dx(f()?)),
            0x17 => Self::OraDily(Dily(f()?)),
            0x18 => Self::Clc,
            0x19 => Self::OraAy(Ay(f16(&mut f)?)),
            0x1A => Self::IncAc,
            0x1B => Self::Tcs,
            0x1C => Self::TrbA(A(f16(&mut f)?)),
            0x1D => Self::OraAx(Ax(f16(&mut f)?)),
            0x1E => Self::AslAx(Ax(f16(&mut f)?)),
            0x1F => Self::OraAlx(Alx(f24(&mut f)?)),
            0x20 => Self::Jsr(f16(&mut f)?),
            0x21 => Self::AndDxi(Dxi(f()?)),
            0x22 => Self::Jsl(f24(&mut f)?),
            0x23 => Self::AndS(S(f()?)),
            0x24 => Self::BitD(D(f()?)),
            0x25 => Self::AndD(D(f()?)),
            0x26 => Self::RolD(D(f()?)),
            0x27 => Self::AndDil(Dil(f()?)),
            0x28 => Self::Plp,
            0x29 => Self::AndI(I::from_fetcher(&mut f, m?)?),
            0x2A => Self::RolAc,
            0x2B => Self::Pld,
            0x2C => Self::BitA(A(f16(&mut f)?)),
            0x2D => Self::AndA(A(f16(&mut f)?)),
            0x2E => Self::RolA(A(f16(&mut f)?)),
            0x2F => Self::AndAl(Al(f24(&mut f)?)),
            0x30 => Self::Bmi(NearLabel(f()?)),
            0x31 => Self::AndDiy(Diy(f()?)),
            0x32 => Self::AndDi(Di(f()?)),
            0x33 => Self::AndSiy(Siy(f()?)),
            0x34 => Self::BitDx(Dx(f()?)),
            0x35 => Self::AndDx(Dx(f()?)),
            0x36 => Self::RolDx(Dx(f()?)),
            0x37 => Self::AndDily(Dily(f()?)),
            0x38 => Self::Sec,
            0x39 => Self::AndAy(Ay(f16(&mut f)?)),
            0x3A => Self::DecAc,
            0x3B => Self::Tsc,
            0x3C => Self::BitAx(Ax(f16(&mut f)?)),
            0x3D => Self::AndAx(Ax(f16(&mut f)?)),
            0x3E => Self::RolAx(Ax(f16(&mut f)?)),
            0x3F => Self::AndAlx(Alx(f24(&mut f)?)),
            0x40 => Self::Rti,
            0x41 => Self::EorDxi(Dxi(f()?)),
            0x42 => Self::Wdm(f()?),
            0x43 => Self::EorS(S(f()?)),
            0x44 => Self::Mvp(f()?, f()?),
            0x45 => Self::EorD(D(f()?)),
            0x46 => Self::LsrD(D(f()?)),
            0x47 => Self::EorDil(Dil(f()?)),
            0x48 => Self::Pha,
            0x49 => Self::EorI(I::from_fetcher(&mut f, m?)?),
            0x4A => Self::LsrAc,
            0x4B => Self::Phk,
            0x4C => Self::Jmp(f16(&mut f)?),
            0x4D => Self::EorA(A(f16(&mut f)?)),
            0x4E => Self::LsrA(A(f16(&mut f)?)),
            0x4F => Self::EorAl(Al(f24(&mut f)?)),
            0x50 => Self::Bvc(NearLabel(f()?)),
            0x51 => Self::EorDiy(Diy(f()?)),
            0x52 => Self::EorDi(Di(f()?)),
            0x53 => Self::EorSiy(Siy(f()?)),
            0x54 => Self::Mvn(f()?, f()?),
            0x55 => Self::EorDx(Dx(f()?)),
            0x56 => Self::LsrDx(Dx(f()?)),
            0x57 => Self::EorDily(Dily(f()?)),
            0x58 => Self::Cli,
            0x59 => Self::EorAy(Ay(f16(&mut f)?)),
            0x5A => Self::Phy,
            0x5B => Self::Tcd,
            0x5C => Self::Jml(f24(&mut f)?),
            0x5D => Self::EorAx(Ax(f16(&mut f)?)),
            0x5E => Self::LsrAx(Ax(f16(&mut f)?)),
            0x5F => Self::EorAlx(Alx(f24(&mut f)?)),
            0x60 => Self::Rts,
            0x61 => Self::AdcDxi(Dxi(f()?)),
            0x62 => Self::Per(f16(&mut f)?),
            0x63 => Self::AdcS(S(f()?)),
            0x64 => Self::StzD(D(f()?)),
            0x65 => Self::AdcD(D(f()?)),
            0x66 => Self::RorD(D(f()?)),
            0x67 => Self::AdcDil(Dil(f()?)),
            0x68 => Self::Pla,
            0x69 => Self::AdcI(I::from_fetcher(&mut f, m?)?),
            0x6A => Self::RorAc,
            0x6B => Self::Rtl,
            0x6C => Self::Jmpi(f16(&mut f)?),
            0x6D => Self::AdcA(A(f16(&mut f)?)),
            0x6E => Self::RorA(A(f16(&mut f)?)),
            0x6F => Self::AdcAl(Al(f24(&mut f)?)),
            0x70 => Self::Bvs(NearLabel(f()?)),
            0x71 => Self::AdcDiy(Diy(f()?)),
            0x72 => Self::AdcDi(Di(f()?)),
            0x73 => Self::AdcSiy(Siy(f()?)),
            0x74 => Self::StzDx(Dx(f()?)),
            0x75 => Self::AdcDx(Dx(f()?)),
            0x76 => Self::RorDx(Dx(f()?)),
            0x77 => Self::AdcDily(Dily(f()?)),
            0x78 => Self::Sei,
            0x79 => Self::AdcAy(Ay(f16(&mut f)?)),
            0x7A => Self::Ply,
            0x7B => Self::Tdc,
            0x7C => Self::Jmpxi(f16(&mut f)?),
            0x7D => Self::AdcAx(Ax(f16(&mut f)?)),
            0x7E => Self::RorAx(Ax(f16(&mut f)?)),
            0x7F => Self::AdcAlx(Alx(f24(&mut f)?)),
            0x80 => Self::Bra(NearLabel(f()?)),
            0x81 => Self::StaDxi(Dxi(f()?)),
            0x82 => Self::Brl(NearLabel(f()?)),
            0x83 => Self::StaS(S(f()?)),
            0x84 => Self::StyD(D(f()?)),
            0x85 => Self::StaD(D(f()?)),
            0x86 => Self::StxD(D(f()?)),
            0x87 => Self::StaDil(Dil(f()?)),
            0x88 => Self::Dey,
            0x89 => Self::BitI(I::from_fetcher(&mut f, m?)?),
            0x8A => Self::Txa,
            0x8B => Self::Phb,
            0x8C => Self::StyA(A(f16(&mut f)?)),
            0x8D => Self::StaA(A(f16(&mut f)?)),
            0x8E => Self::StxA(A(f16(&mut f)?)),
            0x8F => Self::StaAl(Al(f24(&mut f)?)),
            0x90 => Self::Bcc(NearLabel(f()?)),
            0x91 => Self::StaDiy(Diy(f()?)),
            0x92 => Self::StaDi(Di(f()?)),
            0x93 => Self::StaSiy(Siy(f()?)),
            0x94 => Self::StyDx(Dx(f()?)),
            0x95 => Self::StaDx(Dx(f()?)),
            0x96 => Self::StxDy(Dy(f()?)),
            0x97 => Self::StaDily(Dily(f()?)),
            0x98 => Self::Tya,
            0x99 => Self::StaAy(Ay(f16(&mut f)?)),
            0x9A => Self::Txs,
            0x9B => Self::Txy,
            0x9C => Self::StzA(A(f16(&mut f)?)),
            0x9D => Self::StaAx(Ax(f16(&mut f)?)),
            0x9E => Self::StzAx(Ax(f16(&mut f)?)),
            0x9F => Self::StaAlx(Alx(f24(&mut f)?)),
            0xA0 => Self::LdyI(I::from_fetcher(&mut f, x?)?),
            0xA1 => Self::LdaDxi(Dxi(f()?)),
            0xA2 => Self::LdxI(I::from_fetcher(&mut f, x?)?),
            0xA3 => Self::LdaS(S(f()?)),
            0xA4 => Self::LdyD(D(f()?)),
            0xA5 => Self::LdaD(D(f()?)),
            0xA6 => Self::LdxD(D(f()?)),
            0xA7 => Self::LdaDil(Dil(f()?)),
            0xA8 => Self::Tay,
            0xA9 => Self::LdaI(I::from_fetcher(&mut f, m?)?),
            0xAA => Self::Tax,
            0xAB => Self::Plb,
            0xAC => Self::LdyA(A(f16(&mut f)?)),
            0xAD => Self::LdaA(A(f16(&mut f)?)),
            0xAE => Self::LdxA(A(f16(&mut f)?)),
            0xAF => Self::LdaAl(Al(f24(&mut f)?)),
            0xB0 => Self::Bcs(NearLabel(f()?)),
            0xB1 => Self::LdaDiy(Diy(f()?)),
            0xB2 => Self::LdaDi(Di(f()?)),
            0xB3 => Self::LdaSiy(Siy(f()?)),
            0xB4 => Self::LdyDx(Dx(f()?)),
            0xB5 => Self::LdaDx(Dx(f()?)),
            0xB6 => Self::LdxDy(Dy(f()?)),
            0xB7 => Self::LdaDily(Dily(f()?)),
            0xB8 => Self::Clv,
            0xB9 => Self::LdaAy(Ay(f16(&mut f)?)),
            0xBA => Self::Tsx,
            0xBB => Self::Tyx,
            0xBC => Self::LdyAx(Ax(f16(&mut f)?)),
            0xBD => Self::LdaAx(Ax(f16(&mut f)?)),
            0xBE => Self::LdxAy(Ay(f16(&mut f)?)),
            0xBF => Self::LdaAlx(Alx(f24(&mut f)?)),
            0xC0 => Self::CpyI(I::from_fetcher(&mut f, x?)?),
            0xC1 => Self::CmpDxi(Dxi(f()?)),
            0xC2 => Self::Rep(f()?),
            0xC3 => Self::CmpS(S(f()?)),
            0xC4 => Self::CpyD(D(f()?)),
            0xC5 => Self::CmpD(D(f()?)),
            0xC6 => Self::DecD(D(f()?)),
            0xC7 => Self::CmpDil(Dil(f()?)),
            0xC8 => Self::Iny,
            0xC9 => Self::CmpI(I::from_fetcher(&mut f, m?)?),
            0xCA => Self::Dex,
            0xCB => Self::Wai,
            0xCC => Self::CpyA(A(f16(&mut f)?)),
            0xCD => Self::CmpA(A(f16(&mut f)?)),
            0xCE => Self::DecA(A(f16(&mut f)?)),
            0xCF => Self::CmpAl(Al(f24(&mut f)?)),
            0xD0 => Self::Bne(NearLabel(f()?)),
            0xD1 => Self::CmpDiy(Diy(f()?)),
            0xD2 => Self::CmpDi(Di(f()?)),
            0xD3 => Self::CmpSiy(Siy(f()?)),
            0xD4 => Self::Pei(f()?),
            0xD5 => Self::CmpDx(Dx(f()?)),
            0xD6 => Self::DecDx(Dx(f()?)),
            0xD7 => Self::CmpDily(Dily(f()?)),
            0xD8 => Self::Cld,
            0xD9 => Self::CmpAy(Ay(f16(&mut f)?)),
            0xDA => Self::Phx,
            0xDB => Self::Stp,
            0xDC => Self::Jmli(f16(&mut f)?),
            0xDD => Self::CmpAx(Ax(f16(&mut f)?)),
            0xDE => Self::DecAx(Ax(f16(&mut f)?)),
            0xDF => Self::CmpAlx(Alx(f24(&mut f)?)),
            0xE0 => Self::CpxI(I::from_fetcher(&mut f, x?)?),
            0xE1 => Self::SbcDxi(Dxi(f()?)),
            0xE2 => Self::Sep(f()?),
            0xE3 => Self::SbcS(S(f()?)),
            0xE4 => Self::CpxD(D(f()?)),
            0xE5 => Self::SbcD(D(f()?)),
            0xE6 => Self::IncD(D(f()?)),
            0xE7 => Self::SbcDil(Dil(f()?)),
            0xE8 => Self::Inx,
            0xE9 => Self::SbcI(I::from_fetcher(&mut f, m?)?),
            0xEA => Self::Nop,
            0xEB => Self::Xba,
            0xEC => Self::CpxA(A(f16(&mut f)?)),
            0xED => Self::SbcA(A(f16(&mut f)?)),
            0xEE => Self::IncA(A(f16(&mut f)?)),
            0xEF => Self::SbcAl(Al(f24(&mut f)?)),
            0xF0 => Self::Beq(NearLabel(f()?)),
            0xF1 => Self::SbcDiy(Diy(f()?)),
            0xF2 => Self::SbcDi(Di(f()?)),
            0xF3 => Self::SbcSiy(Siy(f()?)),
            0xF4 => Self::Pea(f16(&mut f)?),
            0xF5 => Self::SbcDx(Dx(f()?)),
            0xF6 => Self::IncDx(Dx(f()?)),
            0xF7 => Self::SbcDily(Dily(f()?)),
            0xF8 => Self::Sed,
            0xF9 => Self::SbcAy(Ay(f16(&mut f)?)),
            0xFA => Self::Plx,
            0xFB => Self::Xce,
            0xFC => Self::Jsrxi(f16(&mut f)?),
            0xFD => Self::SbcAx(Ax(f16(&mut f)?)),
            0xFE => Self::IncAx(Ax(f16(&mut f)?)),
            0xFF => Self::SbcAlx(Alx(f24(&mut f)?)),
        })
    }
}
